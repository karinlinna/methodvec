#!/usr/bin/env python3
import logging

from nose.tools import assert_equal, assert_true
import numpy as np
from numpy.testing import assert_allclose
import pickle

import evaluate2
import glove2
import numpy
import pickle

# #Mock corpus (shamelessly stolen from Gensim word2vec tests)
train_corpus = ("""net/minidev/asm/BeansAccess/addAlias(net.minidev.asm.BeansAccess,java.util.HashMap)#java/util/Iterator/hasNext()
net/minidev/asm/BeansAccess/addAlias(net.minidev.asm.BeansAccess,java.util.HashMap)#java/util/HashMap/entrySet()
net/minidev/asm/BeansAccess/addAlias(net.minidev.asm.BeansAccess,java.util.HashMap)#java/util/Set/iterator()
net/minidev/asm/BeansAccess/addAlias(net.minidev.asm.BeansAccess,java.util.HashMap)#java/util/Map$Entry/getValue()
net/minidev/asm/BeansAccess/addAlias(net.minidev.asm.BeansAccess,java.util.HashMap)#java/util/HashMap/putAll(java.util.Map)
net/minidev/asm/BeansAccess/addAlias(net.minidev.asm.BeansAccess,java.util.HashMap)#java/util/HashMap/get(java.lang.Object)
net/minidev/asm/BeansAccess/addAlias(net.minidev.asm.BeansAccess,java.util.HashMap)#java/util/Iterator/next()
net/minidev/asm/BeansAccess/addAlias(net.minidev.asm.BeansAccess,java.util.HashMap)#java/util/HashMap/HashMap()
net/minidev/asm/BeansAccess/addAlias(net.minidev.asm.BeansAccess,java.util.HashMap)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/lang/StringBuilder/append(java.lang.String)
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/util/concurrent/ConcurrentHashMap/putIfAbsent(java.lang.Object,java.lang.Object)
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/util/concurrent/ConcurrentHashMap/get(java.lang.Object)
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/util/Iterator/next()
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/lang/StringBuilder/StringBuilder()
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/lang/String/concat(java.lang.String)
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/lang/String/startsWith(java.lang.String)
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/lang/Class/getClassLoader()
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#net/minidev/asm/DynamicClassLoader/loadClass(java.lang.String)
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/util/HashMap/get(java.lang.Object)
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/lang/StringBuilder/toString()
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/util/LinkedList/iterator()
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/util/Iterator/hasNext()
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/lang/Class/newInstance()
net/minidev/asm/BeansAccess/get(java.lang.Class,net.minidev.asm.FieldFilter)#java/lang/Class/getName()
net/minidev/asm/ASMUtil/getAccessors(java.lang.Class,net.minidev.asm.FieldFilter)#java/lang/reflect/Field/getName()
net/minidev/asm/ASMUtil/getAccessors(java.lang.Class,net.minidev.asm.FieldFilter)#java/lang/Class/getSuperclass()
net/minidev/asm/ASMUtil/getAccessors(java.lang.Class,net.minidev.asm.FieldFilter)#java/util/HashMap/containsKey(java.lang.Object)
net/minidev/asm/ASMUtil/getAccessors(java.lang.Class,net.minidev.asm.FieldFilter)#java/util/Collection/toArray(java.lang.Object[])
net/minidev/asm/ASMUtil/getAccessors(java.lang.Class,net.minidev.asm.FieldFilter)#java/util/HashMap/size()
net/minidev/asm/ASMUtil/getAccessors(java.lang.Class,net.minidev.asm.FieldFilter)#java/util/HashMap/values()
net/minidev/asm/ASMUtil/getAccessors(java.lang.Class,net.minidev.asm.FieldFilter)#java/util/HashMap/HashMap()
net/minidev/asm/ASMUtil/getAccessors(java.lang.Class,net.minidev.asm.FieldFilter)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
net/minidev/asm/ASMUtil/getAccessors(java.lang.Class,net.minidev.asm.FieldFilter)#java/lang/Class/getDeclaredFields()
net/minidev/asm/ConvertDate/convertToDate(java.lang.Object)#java/lang/String/length()
net/minidev/asm/ConvertDate/convertToDate(java.lang.Object)#java/lang/Character/isDigit(char)
net/minidev/asm/ConvertDate/convertToDate(java.lang.Object)#java/lang/Class/getName()
net/minidev/asm/ConvertDate/convertToDate(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
net/minidev/asm/ConvertDate/convertToDate(java.lang.Object)#java/util/TreeMap/containsKey(java.lang.Object)
net/minidev/asm/ConvertDate/convertToDate(java.lang.Object)#java/lang/Object/getClass()
net/minidev/asm/ConvertDate/convertToDate(java.lang.Object)#java/util/StringTokenizer/hasMoreTokens()
net/minidev/asm/ConvertDate/convertToDate(java.lang.Object)#java/lang/StringBuilder/toString()
net/minidev/asm/ConvertDate/convertToDate(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
net/minidev/asm/ConvertDate/convertToDate(java.lang.Object)#java/lang/String/charAt(int)
net/minidev/asm/ConvertDate/convertToDate(java.lang.Object)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
net/minidev/asm/ConvertDate/convertToDate(java.lang.Object)#java/lang/RuntimeException/RuntimeException(java.lang.String)
net/minidev/asm/ConvertDate/convertToDate(java.lang.Object)#java/util/StringTokenizer/nextToken()
net/minidev/asm/ConvertDate/parseMonth(java.lang.String)#java/lang/Integer/intValue()
net/minidev/asm/ConvertDate/parseMonth(java.lang.String)#java/util/TreeMap/get(java.lang.Object)
net/minidev/asm/ConvertDate/parseMonth(java.lang.String)#java/lang/Character/isDigit(char)
net/minidev/asm/ConvertDate/parseMonth(java.lang.String)#java/lang/StringBuilder/StringBuilder()
net/minidev/asm/ConvertDate/parseMonth(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
net/minidev/asm/ConvertDate/parseMonth(java.lang.String)#java/lang/Integer/valueOf(int)
net/minidev/asm/ConvertDate/parseMonth(java.lang.String)#java/lang/NullPointerException/NullPointerException(java.lang.String)
net/minidev/asm/ConvertDate/parseMonth(java.lang.String)#java/lang/StringBuilder/toString()
net/minidev/asm/ConvertDate/parseMonth(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
net/minidev/asm/ConvertDate/parseMonth(java.lang.String)#java/lang/String/charAt(int)
net/minidev/asm/ConvertDate/<clinit>()#java/text/DateFormatSymbols/getShortMonths()
net/minidev/asm/ConvertDate/<clinit>()#java/lang/String/charAt(int)
net/minidev/asm/ConvertDate/<clinit>()#java/lang/String/length()
net/minidev/asm/ConvertDate/<clinit>()#net/minidev/asm/ConvertDate$StringCmpNS/StringCmpNS()
net/minidev/asm/ConvertDate/<clinit>()#java/lang/String/equals(java.lang.Object)
net/minidev/asm/ConvertDate/<clinit>()#java/util/Locale/getLanguage()
net/minidev/asm/ConvertDate/<clinit>()#java/text/DateFormatSymbols/getAvailableLocales()
net/minidev/asm/ConvertDate/<clinit>()#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
net/minidev/asm/ConvertDate/<clinit>()#java/text/DateFormatSymbols/getMonths()
net/minidev/asm/ConvertDate/<clinit>()#java/lang/Integer/valueOf(int)
net/minidev/asm/ConvertDate/<clinit>()#java/text/DateFormatSymbols/getShortWeekdays()
net/minidev/asm/ConvertDate/<clinit>()#java/util/TreeMap/TreeMap(java.util.Comparator)
net/minidev/asm/ConvertDate/<clinit>()#java/util/HashSet/HashSet()
net/minidev/asm/ConvertDate/<clinit>()#java/lang/Character/isDigit(char)
net/minidev/asm/ConvertDate/<clinit>()#java/text/DateFormatSymbols/getWeekdays()
net/minidev/asm/ConvertDate/<clinit>()#java/util/HashSet/add(java.lang.Object)
net/minidev/asm/ConvertDate/<clinit>()#java/text/DateFormatSymbols/getInstance(java.util.Locale)
net/minidev/asm/ConvertDate/getMMDDYYYY(java.util.StringTokenizer,java.lang.String)#java/lang/StringBuilder/StringBuilder()
net/minidev/asm/ConvertDate/getMMDDYYYY(java.util.StringTokenizer,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
net/minidev/asm/ConvertDate/getMMDDYYYY(java.util.StringTokenizer,java.lang.String)#java/util/GregorianCalendar/GregorianCalendar(int,int,int,int,int,int)
net/minidev/asm/ConvertDate/getMMDDYYYY(java.util.StringTokenizer,java.lang.String)#java/util/StringTokenizer/hasMoreTokens()
net/minidev/asm/ConvertDate/getMMDDYYYY(java.util.StringTokenizer,java.lang.String)#java/lang/StringBuilder/toString()
net/minidev/asm/ConvertDate/getMMDDYYYY(java.util.StringTokenizer,java.lang.String)#java/lang/Integer/intValue()
net/minidev/asm/ConvertDate/getMMDDYYYY(java.util.StringTokenizer,java.lang.String)#java/util/GregorianCalendar/set(int,int)
net/minidev/asm/ConvertDate/getMMDDYYYY(java.util.StringTokenizer,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
net/minidev/asm/ConvertDate/getMMDDYYYY(java.util.StringTokenizer,java.lang.String)#java/lang/String/charAt(int)
net/minidev/asm/ConvertDate/getMMDDYYYY(java.util.StringTokenizer,java.lang.String)#java/util/TreeMap/get(java.lang.Object)
net/minidev/asm/ConvertDate/getMMDDYYYY(java.util.StringTokenizer,java.lang.String)#java/lang/Character/isLetter(char)
net/minidev/asm/ConvertDate/getMMDDYYYY(java.util.StringTokenizer,java.lang.String)#java/lang/NullPointerException/NullPointerException(java.lang.String)
net/minidev/asm/ConvertDate/getMMDDYYYY(java.util.StringTokenizer,java.lang.String)#java/util/StringTokenizer/nextToken()
net/minidev/asm/ConvertDate/getYYYYMMDD(java.util.StringTokenizer,java.lang.String)#java/lang/String/charAt(int)
net/minidev/asm/ConvertDate/getYYYYMMDD(java.util.StringTokenizer,java.lang.String)#java/lang/String/length()
net/minidev/asm/ConvertDate/getYYYYMMDD(java.util.StringTokenizer,java.lang.String)#java/lang/String/substring(int,int)
net/minidev/asm/ConvertDate/getYYYYMMDD(java.util.StringTokenizer,java.lang.String)#java/util/GregorianCalendar/getTime()
net/minidev/asm/ConvertDate/getYYYYMMDD(java.util.StringTokenizer,java.lang.String)#java/util/StringTokenizer/nextToken()
net/minidev/asm/ConvertDate/getYYYYMMDD(java.util.StringTokenizer,java.lang.String)#java/util/GregorianCalendar/GregorianCalendar(int,int,int,int,int,int)
net/minidev/asm/ConvertDate/getYYYYMMDD(java.util.StringTokenizer,java.lang.String)#java/util/StringTokenizer/hasMoreTokens()
net/minidev/asm/ConvertDate/getYYYYMMDD(java.util.StringTokenizer,java.lang.String)#java/lang/Integer/intValue()
net/minidev/asm/ConvertDate/getYYYYMMDD(java.util.StringTokenizer,java.lang.String)#java/util/GregorianCalendar/set(int,int)
net/minidev/asm/ConvertDate/getYYYYMMDD(java.util.StringTokenizer,java.lang.String)#java/lang/Character/isDigit(char)
net/minidev/asm/ConvertDate/getYYYYMMDD(java.util.StringTokenizer,java.lang.String)#java/util/GregorianCalendar/setTimeInMillis(long)
net/minidev/asm/ConvertDate/getYYYYMMDD(java.util.StringTokenizer,java.lang.String)#java/lang/String/substring(int)
net/minidev/asm/ConvertDate/getYYYYMMDD(java.util.StringTokenizer,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Integer/intValue()
org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/StringBuffer/append(java.lang.Object)
org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Byte/intValue()
org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Float/floatValue()
org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Short/intValue()
org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Long/longValue()
org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Double/doubleValue()
org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/StringBuffer/toString()
org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/StringBuffer/append(java.lang.String)
org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Character/charValue()
org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Boolean/booleanValue()
org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/StringBuffer/StringBuffer()
org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/getSuperclass()
org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/getName()
org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/String/replace(char,char)
org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/isInterface()
org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/forName(java.lang.String,boolean,java.lang.ClassLoader)
org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Object/getClass()
org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/getClassLoader()
org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Exception/toString()
net/minidev/asm/DefaultConverter/convertTobool(java.lang.Object)#java/lang/Object/toString()
net/minidev/asm/DefaultConverter/convertTobool(java.lang.Object)#java/lang/Boolean/parseBoolean(java.lang.String)
net/minidev/asm/DefaultConverter/convertTobool(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
net/minidev/asm/DefaultConverter/convertTobool(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
net/minidev/asm/DefaultConverter/convertTobool(java.lang.Object)#java/lang/Object/getClass()
net/minidev/asm/DefaultConverter/convertTobool(java.lang.Object)#java/lang/Boolean/booleanValue()
net/minidev/asm/DefaultConverter/convertTobool(java.lang.Object)#java/lang/StringBuilder/toString()
net/minidev/asm/DefaultConverter/convertTobool(java.lang.Object)#java/lang/String/equals(java.lang.Object)
net/minidev/asm/DefaultConverter/convertTobool(java.lang.Object)#java/lang/Class/getName()
""").split("\n")

val_corpus = ("""rg/activiti/bpmn/converter/UserTaskXMLConverter/PotentialOwnerParser/parseChildElement(javax.xml.stream.XMLStreamReader,org.activiti.bpmn.model.BaseElement,org.activiti.bpmn.model.BpmnModel)#javax/xml/stream/XMLStreamReader/getElementText()
org/activiti/bpmn/converter/UserTaskXMLConverter/PotentialOwnerParser/parseChildElement(javax.xml.stream.XMLStreamReader,org.activiti.bpmn.model.BaseElement,org.activiti.bpmn.model.BpmnModel)#java/util/Iterator/hasNext()
org/activiti/bpmn/converter/UserTaskXMLConverter/PotentialOwnerParser/parseChildElement(javax.xml.stream.XMLStreamReader,org.activiti.bpmn.model.BaseElement,org.activiti.bpmn.model.BpmnModel)#java/lang/String/trim()
org/activiti/bpmn/converter/UserTaskXMLConverter/PotentialOwnerParser/parseChildElement(javax.xml.stream.XMLStreamReader,org.activiti.bpmn.model.BaseElement,org.activiti.bpmn.model.BpmnModel)#org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)
org/activiti/bpmn/converter/UserTaskXMLConverter/PotentialOwnerParser/parseChildElement(javax.xml.stream.XMLStreamReader,org.activiti.bpmn.model.BaseElement,org.activiti.bpmn.model.BpmnModel)#java/lang/String/length()
org/activiti/bpmn/converter/UserTaskXMLConverter/PotentialOwnerParser/parseChildElement(javax.xml.stream.XMLStreamReader,org.activiti.bpmn.model.BaseElement,org.activiti.bpmn.model.BpmnModel)#java/util/Iterator/next()
org/activiti/bpmn/converter/UserTaskXMLConverter/PotentialOwnerParser/parseChildElement(javax.xml.stream.XMLStreamReader,org.activiti.bpmn.model.BaseElement,org.activiti.bpmn.model.BpmnModel)#java/lang/String/equals(java.lang.Object)
org/activiti/bpmn/converter/UserTaskXMLConverter/PotentialOwnerParser/parseChildElement(javax.xml.stream.XMLStreamReader,org.activiti.bpmn.model.BaseElement,org.activiti.bpmn.model.BpmnModel)#java/lang/String/substring(int,int)
org/activiti/bpmn/converter/UserTaskXMLConverter/PotentialOwnerParser/parseChildElement(javax.xml.stream.XMLStreamReader,org.activiti.bpmn.model.BaseElement,org.activiti.bpmn.model.BpmnModel)#java/lang/String/startsWith(java.lang.String)
org/activiti/bpmn/converter/UserTaskXMLConverter/PotentialOwnerParser/parseChildElement(javax.xml.stream.XMLStreamReader,org.activiti.bpmn.model.BaseElement,org.activiti.bpmn.model.BpmnModel)#java/util/List/add(java.lang.Object)
org/activiti/bpmn/converter/UserTaskXMLConverter/PotentialOwnerParser/parseChildElement(javax.xml.stream.XMLStreamReader,org.activiti.bpmn.model.BaseElement,org.activiti.bpmn.model.BpmnModel)#org/activiti/bpmn/model/UserTask/getCandidateUsers()
org/activiti/bpmn/converter/UserTaskXMLConverter/PotentialOwnerParser/parseChildElement(javax.xml.stream.XMLStreamReader,org.activiti.bpmn.model.BaseElement,org.activiti.bpmn.model.BpmnModel)#java/util/List/iterator()
org/activiti/bpmn/converter/UserTaskXMLConverter/PotentialOwnerParser/parseChildElement(javax.xml.stream.XMLStreamReader,org.activiti.bpmn.model.BaseElement,org.activiti.bpmn.model.BpmnModel)#org/activiti/bpmn/model/UserTask/getCandidateGroups()
org/activiti/bpmn/converter/BpmnXMLConverter/processFlowElements(java.util.Collection,org.activiti.bpmn.model.BaseElement)#java/util/Iterator/hasNext()
org/activiti/bpmn/converter/BpmnXMLConverter/processFlowElements(java.util.Collection,org.activiti.bpmn.model.BaseElement)#org/activiti/bpmn/model/SequenceFlow/getTargetRef()
org/activiti/bpmn/converter/BpmnXMLConverter/processFlowElements(java.util.Collection,org.activiti.bpmn.model.BaseElement)#java/util/Iterator/next()
org/activiti/bpmn/converter/BpmnXMLConverter/processFlowElements(java.util.Collection,org.activiti.bpmn.model.BaseElement)#org/activiti/bpmn/model/BoundaryEvent/getAttachedToRefId()
org/activiti/bpmn/converter/BpmnXMLConverter/createXML(org.activiti.bpmn.model.FlowElement,org.activiti.bpmn.model.BpmnModel,javax.xml.stream.XMLStreamWriter)#org/activiti/bpmn/model/SubProcess/getArtifacts()
org/activiti/bpmn/converter/BpmnXMLConverter/createXML(org.activiti.bpmn.model.FlowElement,org.activiti.bpmn.model.BpmnModel,javax.xml.stream.XMLStreamWriter)#java/util/Iterator/hasNext()
org/activiti/bpmn/converter/BpmnXMLConverter/createXML(org.activiti.bpmn.model.FlowElement,org.activiti.bpmn.model.BpmnModel,javax.xml.stream.XMLStreamWriter)#javax/xml/stream/XMLStreamWriter/writeStartElement(java.lang.String)
org/activiti/bpmn/converter/BpmnXMLConverter/createXML(org.activiti.bpmn.model.FlowElement,org.activiti.bpmn.model.BpmnModel,javax.xml.stream.XMLStreamWriter)#org/apache/commons/lang3/StringUtils/isNotEmpty(java.lang.CharSequence)
org/activiti/bpmn/converter/BpmnXMLConverter/createXML(org.activiti.bpmn.model.FlowElement,org.activiti.bpmn.model.BpmnModel,javax.xml.stream.XMLStreamWriter)#org/activiti/bpmn/model/SubProcess/getId()
org/activiti/bpmn/converter/BpmnXMLConverter/createXML(org.activiti.bpmn.model.FlowElement,org.activiti.bpmn.model.BpmnModel,javax.xml.stream.XMLStreamWriter)#java/util/Map/get(java.lang.Object)
org/activiti/bpmn/converter/BpmnXMLConverter/createXML(org.activiti.bpmn.model.FlowElement,org.activiti.bpmn.model.BpmnModel,javax.xml.stream.XMLStreamWriter)#java/lang/StringBuilder/StringBuilder()
""").split("\n")
# f = open('/Users/ljl/Downloads/glove/glove.py-master/MV_L/evaluation/train.txt')
# train_corpus = f.readlines()
# f = open('/Users/ljl/Downloads/glove/glove.py-master/MV_L/evaluation/val.txt')
# val_corpus = f.readlines()

glove2.logger.setLevel(logging.ERROR)
mycorpus = glove2.build_corpus(train_corpus)
myvocab = glove2.build_vocab_mine(mycorpus)
mycooccur = glove2.build_cooccur_mine(myvocab, mycorpus, window_size=10)
id2method = evaluate2.make_id2method(myvocab)

W = glove2.train_glove(myvocab, mycooccur, vector_size=10, iterations=100)
# Merge and normalize word vectors
W = evaluate2.merge_main_context(W)



valcorpus = glove2.build_corpus(val_corpus)
valvocab = glove2.build_vocab_mine(valcorpus)
valcooccur = glove2.build_cooccur_mine(valvocab, valcorpus, window_size=10)
valid2method = evaluate2.make_id2method(valvocab)

# valW = glove2.train_glove(valvocab, valcooccur, vector_size=10, iterations=100)
# # Merge and normalize word vectors
# valW = evaluate2.merge_main_context(valW)

# numpy.savetxt('/home/dl//users/lijialin/glove/MV_L/evaluation/W.csv', W, delimiter = ',')
# numpy.savetxt('/home/dl//users/lijialin/glove/MV_L/evaluation/valW.csv', valW, delimiter = ',')
# f1 = open("/home/dl//users/lijialin/glove/MV_L/evaluation/myvocab.txt","wb")
# pickle.dump(myvocab, f1)
# f1.close()
# f2 = open("/home/dl//users/lijialin/glove/MV_L/evaluation/valvocab.txt","wb")
# pickle.dump(valvocab, f2)
# f2.close()

def test_similarity():
    similar = evaluate2.most_similar(W, myvocab, id2method, 'java/util/Iterator/hasNext()',n=1)
    logging.debug(similar)
    print(similar)
    #test_similarity()


methodid=evaluate2.findcommon(myvocab,valvocab)
evaluate2.MRRcompare(W, valW, myvocab,valvocab,methodid, n=10,m=10)
evaluate2.recompare(W, valW, myvocab,valvocab, methodid,n=5,m=1)
evaluate2.recompare(W, valW, myvocab,valvocab, methodid,n=10,m=1)

tcorpus = glove2.build_corpus(t_corpus)
tvocab = glove2.build_vocab_mine(tcorpus)
